{"version":3,"file":"static/js/247.0ea894e4.chunk.js","mappings":"yNAEaA,EAAcC,EAAAA,EAAAA,OAAH,4fAsBXC,EAAYD,EAAAA,EAAAA,OAAH,if,SCtBf,SAASE,EAAT,GAA6C,IAAlBC,EAAiB,EAAjBA,QAASC,EAAQ,EAARA,KACvC,OACI,SAACL,EAAD,CAAaM,KAAK,SAASF,QAASA,EAApC,SAA8CC,GAErD,CACM,SAASE,EAAT,GAA0C,IAAlBH,EAAiB,EAAjBA,QAASC,EAAQ,EAARA,KACpC,OACI,SAACH,EAAD,CAAWI,KAAK,SAASF,QAASA,EAAlC,SAA4CC,GAEnD,C,+MCTYG,EAAcP,EAAAA,EAAAA,GAAH,mFAMXQ,EAAcR,EAAAA,EAAAA,GAAH,2JAUXS,EAAeT,EAAAA,EAAAA,EAAH,mEAKZU,EAAaV,EAAAA,EAAAA,EAAH,yB,SCfR,SAASW,IACtB,OAA8BC,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA8BJ,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KACA,GAAwBN,EAAAA,EAAAA,UAAS,GAAjC,eAAOO,EAAP,KAAaC,EAAb,KACA,GAAwCR,EAAAA,EAAAA,WAAS,GAAjD,eAAOS,EAAP,KAAqBC,EAArB,KAEQC,GAAOC,EAAAA,EAAAA,MAAPD,IAENE,EAAAA,EAAAA,YAAU,WACNL,EAAQ,EACX,GAAE,KAEHK,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAgB,mCAAG,WAAOC,GAAP,gFACrBT,GAAW,GADU,mBAGMU,EAAAA,EAAAA,IAAuBD,EAASR,GAHtC,UAGXU,EAHW,OAIXC,EAAOD,EAASE,QACxBC,QAAQC,IAAI,WAAYJ,GACxBG,QAAQC,IAAI,OAAQH,GAEa,IAA3BD,EAASK,cARI,wDAWJ,IAATf,GAAcA,GAAQU,EAASM,aAXlB,wBAYbrB,GAAW,OAAIgB,IACfR,GAAgB,GAbH,2BAgBbH,GAAQU,EAASM,aACjBrB,GAAW,SAAAsB,GAAU,wBAAQA,IAAR,OAAuBN,GAAvB,IACrBR,GAAgB,IAEF,IAATH,GACLL,GAAW,OAAIgB,IACfR,GAAgB,KAGhBR,GAAW,SAAAsB,GAAU,wBAAQA,IAAR,OAAuBN,GAAvB,IACrBR,GAAgB,IA1BH,kDA8BjBU,QAAQC,IAAR,MACAjB,EAAS,CAAED,MAAK,OA/BC,yBAkCjBG,GAAW,GAlCM,6EAAH,sDAqCtBQ,EAAiBH,EACpB,GAAE,CAACA,EAAIJ,IAMR,OACI,gCACKF,IAAW,SAACoB,EAAA,EAAD,IACXtB,IAAS,SAAC,IAAD,KACRF,IAAW,SAAC,IAAD,IACZA,IAAW,iCACR,SAACN,EAAD,UACKM,EAAQyB,KAAI,gBAAGf,EAAH,EAAGA,GAAIgB,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACT,UAAChC,EAAD,YACI,SAACC,EAAD,UAAe8B,KACf,SAAC7B,EAAD,UAAa8B,MAFCjB,EADT,MAOhBF,IAAgB,SAACoB,EAAA,EAAD,CAAgBtC,QAlB9B,WACXiB,GAAQ,SAAAD,GAAI,OAAIA,EAAO,CAAX,GACf,SAoBJ,C","sources":["components/Button/ButtonStyled.js","components/Button/Button.js","components/MovieDetails/ReviewsStyled.js","components/MovieDetails/Reviews.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const BtnLoadMore = styled.button` \npadding: 8px 16px;\nborder-radius: 4px;\ntransition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\ntext-align: center;\ndisplay: inline-block;\ncolor: #fff;\ncursor: pointer;\nfont-family: inherit;\nfont-size: 18px;\nline-height: 24px;\nfont-weight: 500;\nwidth: 180px;\nbox-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\nbackground-color: orangered;\nmargin: 16px 0;\n\n&:hover{\n  background-color: darkgray;\n}\n`;\n\nexport const BtnGoBack = styled.button` \npadding: 8px 16px;\nborder-radius: 4px;\ntransition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\ntext-align: center;\ndisplay: inline-block;\ncolor: #fff;\ncursor: pointer;\nfont-family: inherit;\nfont-size: 16px;\nline-height: 20px;\nfont-weight: 500;\nwidth: 100px;\nbox-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\nbackground-color: darkgray;\nmargin: 16px 0;\n\n&:hover{\n  color: orangered;\n}\n`;\n","import { BtnLoadMore, BtnGoBack } from 'components/Button/ButtonStyled';\n\nexport function ButtonLoadMore ({ onClick, text }) {\n    return (\n        <BtnLoadMore type=\"button\" onClick={onClick}>{text}</BtnLoadMore>\n    );\n}\nexport function ButtonGoBack({ onClick, text }) {\n    return (\n        <BtnGoBack type=\"button\" onClick={onClick}>{text}</BtnGoBack>\n    );\n}\n","import styled from '@emotion/styled';\n\nexport const ReviewsList = styled.ul` \ndisplay: flex;\nflex-direction: column;\nmargin: 0 16px;\n`;\n\nexport const ReviewsItem = styled.li` \nbox-shadow: 0px 0px 3px 1px rgba(0, 0, 0, 0.2);\npadding: 16px;\nmargin-bottom: 16px;\n\n&: last-child {\n  margin-bottom: 0;\n}\n`;\n\nexport const ReviewerName = styled.p` \npadding-bottom: 8px; \nfont-weight: 500;\n`;\n\nexport const ReviewText = styled.p` \n`;\n","import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Loader from 'components/Loader/Loader';\nimport {NoRviews, Error} from 'components/Notification/Notification';\nimport { FetchApiMovieIdReviews } from 'components/FetchApi/FetchApi';\nimport {ButtonLoadMore} from \"components/Button/Button\";\nimport { ReviewsList, ReviewsItem, ReviewerName, ReviewText } from 'components/MovieDetails/ReviewsStyled';\n\nexport default function Reviews () {\n  const [reviews, setReviews] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [page, setPage] = useState(1);\n  const [showLoadMore, setShowLoadMore] = useState(false);\n  \n  const { id } = useParams();\n  \n    useEffect(() => {\n        setPage(1);\n    }, []);\n  \n    useEffect(() => {\n        const fetchMovieIdCast = async (movieId) => {\n            setLoading(true);\n            try {\n                const response = await FetchApiMovieIdReviews(movieId, page);\n                const data = response.results;\n              console.log(\"response\", response);\n              console.log(\"data\", data);\n              \n                if (response.total_results === 0) {\n                    return ;\n                }\n                if (page === 1 && page >= response.total_pages) {\n                    setReviews([...data]);\n                    setShowLoadMore(false);\n                    return;\n                }\n                if (page >= response.total_pages) {\n                    setReviews(prevMovies => [...prevMovies, ...data]);\n                    setShowLoadMore(false);\n                }\n                else if (page === 1) {\n                    setReviews([...data]);\n                    setShowLoadMore(true);\n                }\n                else {\n                    setReviews(prevMovies => [...prevMovies, ...data]);\n                    setShowLoadMore(true);\n                }\n            }\n            catch (error) {\n                console.log(error);\n                setError({ error });\n            }\n            finally {\n                setLoading(false);\n            }\n        }\n        fetchMovieIdCast(id);\n    }, [id, page])\n  \n  const loadMore = () => {\n        setPage(page => page + 1);\n    }\n\n    return (\n        <>\n            {loading && <Loader />}\n            {error && <Error />}\n            {!reviews && <NoRviews/>}\n            {reviews && <>\n                <ReviewsList> \n                    {reviews.map(({ id, author, content }) => (\n                        <ReviewsItem key={id}>\n                            <ReviewerName>{author}</ReviewerName>\n                            <ReviewText>{content}</ReviewText>\n                        </ReviewsItem>\n                    ))} \n                </ReviewsList>\n                {showLoadMore && <ButtonLoadMore onClick={loadMore} />}\n            </>} \n        </>\n    )\n}\n"],"names":["BtnLoadMore","styled","BtnGoBack","ButtonLoadMore","onClick","text","type","ButtonGoBack","ReviewsList","ReviewsItem","ReviewerName","ReviewText","Reviews","useState","reviews","setReviews","error","setError","loading","setLoading","page","setPage","showLoadMore","setShowLoadMore","id","useParams","useEffect","fetchMovieIdCast","movieId","FetchApiMovieIdReviews","response","data","results","console","log","total_results","total_pages","prevMovies","Loader","map","author","content","Button"],"sourceRoot":""}