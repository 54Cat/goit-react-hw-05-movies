{"version":3,"file":"static/js/913.e42df852.chunk.js","mappings":"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","sources":["components/Button/ButtonStyled.js","components/Button/Button.js","components/MovieDetails/SingleMovieMarkupStyled.js","components/MovieDetails/SingleMovieMarkup.js","pages/MovieDetails.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const BtnLoadMore = styled.button` \npadding: 8px 16px;\nborder-radius: 4px;\ntransition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\ntext-align: center;\ndisplay: inline-block;\ncolor: #fff;\ncursor: pointer;\nfont-family: inherit;\nfont-size: 18px;\nline-height: 24px;\nfont-weight: 500;\nwidth: 180px;\nbox-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\nbackground-color: orangered;\nmargin: 16px 0;\n\n&:hover{\n  background-color: darkgray;\n}\n`;\n\nexport const BtnGoBack = styled.button` \npadding: 8px 16px;\nborder-radius: 4px;\ntransition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\ntext-align: center;\ndisplay: inline-block;\ncolor: #fff;\ncursor: pointer;\nfont-family: inherit;\nfont-size: 16px;\nline-height: 20px;\nfont-weight: 500;\nwidth: 100px;\nbox-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\nbackground-color: darkgray;\nmargin: 16px 0;\n\n&:hover{\n  color: orangered;\n}\n`;\n","import { BtnLoadMore, BtnGoBack } from 'components/Button/ButtonStyled';\n\nexport function ButtonLoadMore ({ onClick, text }) {\n    return (\n        <BtnLoadMore type=\"button\" onClick={onClick}>{text}</BtnLoadMore>\n    );\n}\nexport function ButtonGoBack({ onClick, text }) {\n    return (\n        <BtnGoBack type=\"button\" onClick={onClick}>{text}</BtnGoBack>\n    );\n}\n","import styled from '@emotion/styled'; import { Link } from 'react-router-dom';\n\nexport const ContainerDetails = styled.div` \npadding-left: 16px;\n`;\n\nexport const SingleMovie = styled.div` \ndisplay: flex;\nflex-direction: column;\nalign-items: flex-start;\n`;\n\n\n// --------- MainInfo ---------\nexport const MainInfo = styled.div` \ndisplay: flex;\nflex-direction: row;\nalign-items: flex-start;\nborder-bottom: 1px solid darkgrey;\npadding: 0 16px 16px 16px;\nmargin-bottom: 16px;\n`;\n\nexport const ContainerPoster = styled.div` \nmax-width: 300px;\n`;\n\nexport const MoviePoster = styled.img` \nwidth: 100%;\n`;\n\nexport const ContainerInfo = styled.div` \ndisplay: flex;\nflex-direction: column;\nalign-items: flex-start;\npadding-left: 16px;\n`;\n\nexport const Section = styled.div` \npadding-bottom: 16px;\n`;\n\nexport const MovieName = styled.h2` \npadding-bottom: 8px; \nfont-weight: 500;\n`;\n\nexport const MovieYear = styled.span` \ncolor: darkgray;\nfont-weight: normal;\n`;\n\nexport const Rating = styled.p` \n\n`;\n\nexport const TextSpan = styled.span` \ncolor: darkgray;\n`;\n\nexport const Title = styled.h3` \npadding-bottom: 8px;\n`;\n\nexport const Text = styled.p` \n`;\n\nexport const GenresList = styled.ul` \ndisplay: flex;\nflex-wrap: wrap;\n`;\n\nexport const GenresItem = styled.li`\npadding-right: 8px;\n\n&: last-child {\n  padding-right: 0;\n}\n`;\n\n\n// --------- AdditionalInfo ---------\nexport const AdditionalInfo = styled.div`\nborder-bottom: 1px solid darkgrey;\npadding: 0 16px 16px 16px;\nmargin-bottom: 16px;\n`;\n\nexport const DetailsList = styled.ul` \ndisplay: flex;\nflex-wrap: wrap;\n`;\n\nexport const DetailsLink = styled(Link)`\npadding-right: 8px;\ncolor: black;\n\n&: last-child {\n  padding-right: 0;\n}\n\n  &:hover{\n    color: orangered;\n  }\n`;\n","import { SingleMovie,MainInfo,AdditionalInfo, ContainerPoster, ContainerInfo,Section, MovieName, MovieYear,MoviePoster, Title, Rating, Text, TextSpan, GenresList, GenresItem, DetailsList, DetailsLink } from 'components/MovieDetails/SingleMovieMarkupStyled';\nimport { Outlet } from 'react-router-dom';\nimport { Suspense } from 'react';\nimport img from 'img/noPoster.jpg';\n\nconst BASE_URL = 'https://image.tmdb.org/t/p/';\nconst SIZE = 'original';\n\nconst detailsItems = [\n    {href: 'cast', text:'Cast'},\n    {href: 'reviews', text:'Reviews'}\n]\n\nexport const SingleMovieMarkup = ({ details }) => {\n    const { poster_path, original_title, overview, genres, vote_average, release_date } = details;\n\n    const date = new Date(release_date);\n    const releaseYear = date.getFullYear();\n    const rating = vote_average.toFixed(1);\n\n    return (\n        <SingleMovie>\n\n            <MainInfo>\n                <ContainerPoster>\n                    <MoviePoster src={poster_path ? `${BASE_URL}${SIZE}${poster_path}` : img} alt={original_title} />\n                </ContainerPoster>\n                \n                <ContainerInfo>\n                    <Section>\n                        <MovieName>{original_title} <MovieYear>({releaseYear})</MovieYear> </MovieName>\n                        <Rating>Rating: {rating}<TextSpan>/10</TextSpan> </Rating>\n                    </Section>\n                    \n                    <Section>\n                        <Title>Overview</Title>\n                        <Text>{overview}</Text>\n                    </Section>\n\n                    <Section>\n                        <Title>Genres</Title>\n                        <GenresList>\n                            {genres.map(({ name }) =>\n                                <GenresItem key={name}>\n                                    {name}\n                                </GenresItem>\n                            )}\n                        </GenresList>\n                    </Section>\n                    \n                </ContainerInfo>\n            </MainInfo>\n\n            <AdditionalInfo>\n                <Title>Additional Information</Title>\n                <DetailsList> \n                    {detailsItems.map(({ href, text }) => (\n                            <DetailsLink key={href} to={href}>\n                                {text}\n                            </DetailsLink>\n                    ))} \n                </DetailsList>\n            </AdditionalInfo>\n            <Suspense fallback={<div>Loading...</div>}>\n                <Outlet />\n            </Suspense>\n            \n        </SingleMovie>\n    );\n}\n","import { useEffect, useState } from \"react\";\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\nimport Loader from 'components/Loader/Loader';\nimport {Error} from 'components/Notification/Notification';\nimport { SingleMovieMarkup } from 'components/MovieDetails/SingleMovieMarkup';\nimport { FetchApiMovieId } from 'components/FetchApi/FetchApi';\nimport {ButtonGoBack} from \"components/Button/Button\";\nimport { ContainerDetails } from 'components/MovieDetails/SingleMovieMarkupStyled';\n\nexport default function MovieDetails () {\n    const [movie, setMovie] = useState(null);\n    const [error, setError] = useState(null);\n    const [loading, setLoading] = useState(false);\n    const { id } = useParams();\n    const navigate = useNavigate();\n    const location = useLocation();\n    \n    useEffect(() => {\n        const fetchMovieId = async (movieId) => {\n            setLoading(true);\n            try {\n                const data = await FetchApiMovieId(movieId);\n                setMovie(data);\n            }\n            catch (error) {\n                setError({ error });\n            }\n            finally {\n                setLoading(false);\n            }\n        }\n        fetchMovieId(id);\n    }, [id])\n\n    const goBack = () => {\n        navigate(location.state?.from ?? '/');\n    };\n\n    return (\n        <>\n            <ContainerDetails>\n                <ButtonGoBack type=\"button\" onClick={goBack} text='Go back' />\n            </ContainerDetails>\n            {loading && <Loader />}\n            {error && <Error />}\n            {movie && <SingleMovieMarkup details={movie} />} \n        </>\n    )\n}\n"],"names":["BtnLoadMore","styled","BtnGoBack","ButtonLoadMore","onClick","text","type","ButtonGoBack","ContainerDetails","SingleMovie","MainInfo","ContainerPoster","MoviePoster","ContainerInfo","Section","MovieName","MovieYear","Rating","TextSpan","Title","Text","GenresList","GenresItem","AdditionalInfo","DetailsList","DetailsLink","Link","detailsItems","href","SingleMovieMarkup","details","poster_path","original_title","overview","genres","vote_average","release_date","releaseYear","Date","getFullYear","rating","toFixed","src","img","alt","map","name","to","Suspense","fallback","MovieDetails","useState","movie","setMovie","error","setError","loading","setLoading","id","useParams","navigate","useNavigate","location","useLocation","useEffect","fetchMovieId","movieId","FetchApiMovieId","data","Button","state","from","Loader"],"sourceRoot":""}