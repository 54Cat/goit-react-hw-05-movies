{"version":3,"file":"static/js/674.561acf33.chunk.js","mappings":"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","sources":["components/Button/ButtonStyled.js","components/Button/Button.js","components/Form/FormStyled.js","components/Form/Form.js","pages/Movies.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const BtnLoadMore = styled.button` \npadding: 8px 16px;\nborder-radius: 4px;\ntransition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\ntext-align: center;\ndisplay: inline-block;\ncolor: #fff;\ncursor: pointer;\nfont-family: inherit;\nfont-size: 18px;\nline-height: 24px;\nfont-weight: 500;\nwidth: 180px;\nbox-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\nbackground-color: orangered;\nmargin: 16px 0;\n\n&:hover{\n  background-color: darkgray;\n}\n`;\n\nexport const BtnGoBack = styled.button` \npadding: 8px 16px;\nborder-radius: 4px;\ntransition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\ntext-align: center;\ndisplay: inline-block;\ncolor: #fff;\ncursor: pointer;\nfont-family: inherit;\nfont-size: 16px;\nline-height: 20px;\nfont-weight: 500;\nwidth: 100px;\nbox-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\nbackground-color: darkgray;\nmargin: 16px 0;\n\n&:hover{\n  color: orangered;\n}\n`;\n","import { BtnLoadMore, BtnGoBack } from 'components/Button/ButtonStyled';\n\nexport function ButtonLoadMore ({ onClick, text }) {\n    return (\n        <BtnLoadMore type=\"button\" onClick={onClick}>{text}</BtnLoadMore>\n    );\n}\nexport function ButtonGoBack({ onClick, text }) {\n    return (\n        <BtnGoBack type=\"button\" onClick={onClick}>{text}</BtnGoBack>\n    );\n}\n","import styled from '@emotion/styled';\n\nexport const SearchContainer = styled.div` \ntop: 51px;\nleft: 0;\nposition: sticky;\nz-index: 1200;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nmin-height: 32px;\n\npadding: 16px 0;\ncolor: #fff;\nbackground-color: #ffffff;\n`;\n\nexport const SearchForm = styled.form` \ndisplay: flex;\nalign-items: center;\nwidth: 100%;\nmax-width: 600px;\nbackground-color: #fff;\noverflow: hidden;\nbox-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n  0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\n\nexport const SearchFormBtn = styled.button` \ndisplay: inline-block;\nwidth: 36px;\nheight: 36px;\nborder: 0;\nbackground-image: url('https://img.icons8.com/ios-filled/50/000000/search--v1.png');\nbackground-size: 60%;\nbackground-repeat: no-repeat;\nbackground-position: center; \nopacity: 0.6;\ntransition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\ncursor: pointer;\noutline: none;\npadding: 0;\n\n&:hover{\n  opacity: 1;\n}\n`;\n\nexport const SearchFormBtnLabel = styled.span` \nposition: absolute;\nwidth: 1px;\nheight: 1px;\npadding: 0;\noverflow: hidden;\nclip: rect(0, 0, 0, 0);\nwhite-space: nowrap;\nclip-path: inset(50%);\nborder: 0;\n`;\n\nexport const SearchFormInput = styled.input` \ndisplay: inline-block;\nwidth: 100%;\nfont: inherit;\nfont-size: 20px;\nborder: none;\noutline: none;\npadding-left: 16px;\npadding-right: 8px;\n\n&::placeholder{\n  font: inherit;\n  font-size: 18px;\n}\n`;\n","import { useState } from \"react\";\nimport { toast } from 'react-toastify';\nimport { SearchContainer, SearchForm, SearchFormBtn, SearchFormBtnLabel, SearchFormInput } from 'components/Form/FormStyled';\n\nexport default function Searchbar({onSubmit}) {   \n    const [searchMovie, setSearchMovie] = useState('');\n\n    const handelSearchMovie = e => {\n        setSearchMovie( e.currentTarget.value.toLowerCase() );\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault();\n\n        if (searchMovie.trim() === '') {\n            toast.warn('Please, enter a search query!');\n            return;\n        }\n        \n        onSubmit(searchMovie);\n        setSearchMovie('');\n    }     \n\n        return (\n            <SearchContainer>\n                <SearchForm onSubmit={handleSubmit}>\n                    <SearchFormInput\n                        type=\"text\"\n                        autocomplete=\"off\"\n                        autoFocus\n                        placeholder=\"Search images and photos\"\n                        value={searchMovie}\n                        onChange={handelSearchMovie}\n                    />\n                    <SearchFormBtn type=\"submit\">\n                        <SearchFormBtnLabel>Search</SearchFormBtnLabel>\n                    </SearchFormBtn>\n                </SearchForm>\n            </SearchContainer>\n        );\n    }\n","import { useEffect, useState } from \"react\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport { toast } from 'react-toastify';\nimport { AppContainer } from 'components/App/AppStyled';\nimport { FetchApiSearchMovies } from 'components/FetchApi/FetchApi';\nimport Loader from 'components/Loader/Loader';\nimport Form from 'components/Form/Form';\nimport MovieGalleryList from 'components/Gallery/GalleryList/MovieGalleryList';\nimport { Error } from 'components/Notification/Notification';\nimport { ButtonLoadMore } from \"components/Button/Button\";\nimport { useSearchParams } from \"react-router-dom\";\n\nexport default function Movies () {\n    const [movies, setMovies] = useState([]);  \n    const [page, setPage] = useState(1);\n    const [error, setError] = useState(null);\n    const [loading, setLoading] = useState(false);\n    const [showLoadMore, setShowLoadMore] = useState(false);\n    const [searchParams, setSearchParams] = useSearchParams();\n    const movieName = searchParams.get(\"query\") ?? \"\";\n\n    useEffect(() => {\n        setPage(1);\n    }, [movies]);\n  \n    useEffect(() => {\n        if (!movieName) {  \n            return;\n        }\n\n        const fetchMovies = async (query) => {\n            setLoading(true);\n            try {\n                const response = await FetchApiSearchMovies(query, page);\n                const data = response.results;\n\n                if (response.total_results === 0) {\n                    return toast.info(\"Nothing found! Try again, please.\");\n                }\n                if (page === 1 && page >= response.total_pages) {\n                    setMovies([...data]);\n                    setShowLoadMore(false);\n                    return;\n                }\n                if (page >= response.total_pages) {\n                    setMovies(prevMovies => [...prevMovies, ...data]);\n                    setShowLoadMore(false);\n                }\n                else if (page === 1) {\n                    setShowLoadMore(true);\n                    setMovies([...data]);\n                }\n                else {\n                    setMovies(prevMovies => [...prevMovies, ...data]);\n                    setShowLoadMore(true);\n                }\n            }\n            catch (error) {\n                setError({ error });\n            }\n            finally {\n                setLoading(false);\n            }\n        }\n        fetchMovies(movieName);\n    }, [movieName, page])\n\n    const loadMore = () => {\n        setPage(page => page + 1);\n    }\n\n    const updateQueryString = (query) => {\n        const nextQuery = query !== \"\" ? { query } : {};\n        setSearchParams(nextQuery);\n    };\n\n    return (\n        <>\n            <AppContainer>\n                <Form onSubmit={updateQueryString} />\n                {loading && <Loader />}\n                {error && <Error />}\n                {movies && <MovieGalleryList movies={movies} />}\n                {showLoadMore && <ButtonLoadMore onClick={loadMore} text='Load more' />}\n            </AppContainer>\n        </>\n    )\n}\n"],"names":["BtnLoadMore","styled","BtnGoBack","ButtonLoadMore","onClick","text","type","ButtonGoBack","SearchContainer","SearchForm","SearchFormBtn","SearchFormBtnLabel","SearchFormInput","Searchbar","onSubmit","useState","searchMovie","setSearchMovie","e","preventDefault","trim","toast","autocomplete","autoFocus","placeholder","value","onChange","currentTarget","toLowerCase","Movies","movies","setMovies","page","setPage","error","setError","loading","setLoading","showLoadMore","setShowLoadMore","useSearchParams","searchParams","setSearchParams","movieName","get","useEffect","fetchMovies","query","FetchApiSearchMovies","response","data","results","total_results","total_pages","prevMovies","Loader","MovieGalleryList","Button"],"sourceRoot":""}